{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAW,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OAlBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GACHC,YAAW,WACRJ,EACC,CACIf,KAAMkB,EACNL,SAAS,MAGd,UAGb,CAACpB,IAIIqB,EDzBiBM,CAAa3B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACG,qCACK,oBAAIJ,UAAU,gBAAd,SAA+BhB,IAE9BoB,GAAW,6CACZ,qBAAKJ,UAAU,YAAf,SAGYT,EAAKE,KAAK,SAACC,GAAD,OACN,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEe1BiB,EA7BQ,WAInB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAGA,OAAO,qCACH,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAIA,6BAEQ4C,EAAWpB,KAAI,SAACT,EAAS8B,GAAV,OACX,cAAC,EAAD,CACI9B,SAAWA,GACNA,Y,MChB7B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.e316490e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories( cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"                \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=UAZ5arTUZ6bT8AmYAcaIrjKW5iViFL0T`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__wobble \">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({category} ) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n       <>\r\n            <h3 className=\"animate__flip\">{category}</h3> \r\n\r\n            {loading && <p>Cargando....</p>}\r\n            <div className=\"card-grid\">\r\n\r\n                    {\r\n                        data.map( (img)=>\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                                \r\n                            />\r\n                        )\r\n                        // images.map( ({title, id})=>\r\n                        //     <li key={id}>\r\n                        //         {title}\r\n                        //     </li>\r\n                                \r\n                        // )\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        \r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                   setState(\r\n                    {\r\n                        data: imgs,\r\n                        loading: false\r\n                    }\r\n                )    \r\n                }, 3000);\r\n                \r\n            });\r\n    },[category]);\r\n\r\n   \r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GiftGrid } from \"./components/GiftGrid\";\r\n\r\n\r\n const GiftExpertApp = () =>{\r\n\r\n    \r\n    \r\n    const [categories, setCategories] = useState(['One punch']);\r\n    \r\n\r\n    return <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategories={setCategories} />\r\n        \r\n        <hr></hr>\r\n\r\n        \r\n\r\n        <ol>\r\n            { \r\n                categories.map((category,index)=>\r\n                    <GiftGrid \r\n                        category={ category }\r\n                        key={category}\r\n                    /> \r\n                )\r\n            }\r\n        </ol>\r\n\r\n    </>\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\n\n\n\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GiftExpertApp />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}